{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HIF (Hardware Interchange Format)","text":"<p>Warning</p> <p>HIF is under active development. The documentation is a work in progress and may contain errors or incomplete information.</p> <p>HIF Project  is a modular framework for modeling, transforming, and verifying heterogeneous HW/SW systems, based on the Hardware Interchange Format (HIF).</p>"},{"location":"#overview","title":"Overview","text":"<p>The HIF Project is a tightly integrated set of tools and APIs designed to support modeling, transformation, and verification of heterogeneous HW/SW systems. At its core lies the HIF format, a unified internal language that acts as a bridge between various Hardware Description Languages (HDLs) such as VHDL, Verilog, and SystemC (both RTL and TLM levels).</p> <p>HIF addresses key pain points in modern hardware design by providing:</p> <ul> <li>Bidirectional conversion between HDL and HIF</li> <li>Seamless integration of components modeled in different HDLs</li> <li>Automation for code abstraction, refinement, and fault injection</li> <li>A single environment for transactor generation, mutation analysis, and EFSM extraction</li> </ul> <p>By offering a standardized internal format and robust manipulation APIs, HIF enables faster design reuse, improves simulation performance, and supports safety-critical verification processes that would otherwise require multiple disconnected tools.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Bidirectional HDL to/from HIF conversion</li> <li>Integration of heterogeneous HDL components</li> <li>Abstraction and refinement of HDL models</li> <li>Fault injection and post-refinement verification</li> <li>Extensible APIs for advanced code manipulation</li> <li>Support for both front-end and back-end transformation tools</li> </ul>"},{"location":"#repositories","title":"Repositories","text":"<p>HIFSuite is organized into three main repositories:</p> <ul> <li> <p>hif-core   Contains the HIF abstract syntax tree (AST) representation and the core   functionality for visiting, analysis, and manipulation of HDL models.</p> </li> <li> <p>hif-frontend   Provides front-end tools to convert existing HDL code to HIF.   Current tools include:</p> </li> <li><code>verilog2hif</code>: Verilog to HIF converter</li> <li> <p><code>vhdl2hif</code>: VHDL to HIF converter</p> </li> <li> <p>hif-backend   Implements back-end tools to generate HDL code from HIF.   Current tools include:</p> </li> <li><code>hif2sc</code>: Generates SystemC code from HIF</li> <li><code>hif2verilog</code>: Generates Verilog code (currently incomplete)</li> </ul>"},{"location":"#publications","title":"Publications","text":"<pre><code>Nicola Bombieri, Giuseppe Di Guglielmo, Michele Ferrari, Franco Fummi, Graziano\nPravadelli, Francesco Stefanni, and Alessandro Venturelli. 2010. HIFsuite: tools\nfor HDL code conversion and manipulation. EURASIP J. Embedded Syst. 2010,\nArticle 4 (January 2010), 20 pages. https://doi.org/10.1155/2010/436328\n</code></pre>"},{"location":"#license","title":"License","text":"<p>HIF is released under the BSD 2-Clause License.</p>"},{"location":"#contact","title":"Contact","text":"<p>For technical support, collaborations, or further information, contact:</p> <p>Enrico Fraccaroli enrico.fraccaroli@univr.it Department of Engineering for Innovation Medicine University of Verona, Italy</p>"}]}